divisor(A,Result):-
    div_routine(A,1,[],Result).

div_routine(A,N,IntermediateList,Result):-
    % Больше половины числа
    A/N < 2,
    % присоединяем к списку делителей само это число и уходим
    append(IntermediateList,[A],Result),!.

div_routine(A,N,IntermediateList,Result):-
    % вычисляем mod
    AmodN is A mod N,
    % является ли делителем?
    AmodN = 0,
    % если да, присоединяем рассматриваемое сейчас число N к списку делителей
    append(IntermediateList,[N],IntermediateListPlusN),
    % идем к следующему числу
    N2 is N + 1,
    % идем дальше
    div_routine(A,N2,IntermediateListPlusN,Result),!.

div_routine(A,N,IntermediateList,Result):-
    % если не делитель, то просто переходим к следующему числу
    N2 is N + 1,
    % и идем дальше
    div_routine(A,N2,IntermediateList,Result),!.

solution([],Result1,Result):-list_to_set(Result1,Result),!.
solution([H|T],Result1,Result):-
    divisor(H,ListDivisorH),
    append(Result1,ListDivisorH,Result2),
    solution(T,Result2,Result).







